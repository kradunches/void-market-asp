services:
  asp.apigateway:
    container_name: void-market-asp.api-gateway
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    ports:
      - "4030:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
    networks:
      - void-market-network

  asp.order-svc:
    container_name: void-market-asp-asp.order-svc
    build:
      context: .
      dockerfile: ./OrderService/Dockerfile
    ports:
      - "4033:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
    networks:
      - void-market-network

  asp.payment-svc:
    container_name: void-market-asp-asp.payment-svc
    build:
      context: .
      dockerfile: ./PaymentService/Dockerfile
    ports:
      - "4032:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
    networks:
      - void-market-network

  asp.users-svc:
    container_name: void-market-asp-asp.users-svc
    build:
      context: .
      dockerfile: ./UserService/Dockerfile
    ports:
      - "4031:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
    networks:
      - void-market-network
        
##############################################
# оставил для шаблона
  
#  mongo:
#    image: mongo:6
#    container_name: mongodb_void_asp
#    ports:
#      - "27018:27017"
#    volumes:
#      - mongo-data:/data/db
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=password
#      - MONGO_INITDB_DATABASE=void-market
#    restart: unless-stopped
#    networks:
#      - void-market-network
#        
#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express_void_asp
#    ports:
#      - "8082:8081"
#    environment:
#      - ME_CONFIG_MONGODB_SERVER=mongo
#      - ME_CONFIG_MONGODB_PORT=27017
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
#      - ME_CONFIG_BASICAUTH_USERNAME=admin
#      - ME_CONFIG_BASICAUTH_PASSWORD=password
#    depends_on:
#      - mongo
#    restart: unless-stopped
#    networks:
#      - void-market-network
#        
#  postgres:
#    image: postgres:15
#    container_name: postgres_void_asp
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: void-market
#    ports:
#      - "5433:5432"
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    restart: always
#    networks:
#      - void-market-network
#        
#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq_void_asp
#    ports:
#      - "5673:5672"     # основной порт для приложений
#      - "15673:15672"   # порт веб-интерфейса (http://localhost:15672)
#    volumes:
#      - ./rabbitmq_void_asp_data:/var/lib/rabbitmq
#    environment:
#      RABBITMQ_DEFAULT_USER: admin
#      RABBITMQ_DEFAULT_PASS: password
#    restart: always
#    networks:
#      - void-market-network
#volumes:
#  mongo-data:
#  pgdata:
#
#networks:
#  void-market-network:
#    name: void-market-network
#    driver: bridge
